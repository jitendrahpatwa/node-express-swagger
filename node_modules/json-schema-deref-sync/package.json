{
  "_args": [
    [
      {
        "raw": "json-schema-deref-sync@^0.3.1",
        "scope": null,
        "escapedName": "json-schema-deref-sync",
        "name": "json-schema-deref-sync",
        "rawSpec": "^0.3.1",
        "spec": ">=0.3.1 <0.4.0",
        "type": "range"
      },
      "C:\\Imp\\node\\swag\\node_modules\\swagger-test-templates"
    ]
  ],
  "_from": "json-schema-deref-sync@>=0.3.1 <0.4.0",
  "_id": "json-schema-deref-sync@0.3.4",
  "_inCache": true,
  "_location": "/json-schema-deref-sync",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/json-schema-deref-sync-0.3.4.tgz_1510881117726_0.49878669739700854"
  },
  "_npmUser": {
    "name": "bojand",
    "email": "dbojan@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-schema-deref-sync@^0.3.1",
    "scope": null,
    "escapedName": "json-schema-deref-sync",
    "name": "json-schema-deref-sync",
    "rawSpec": "^0.3.1",
    "spec": ">=0.3.1 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/swagger-test-templates"
  ],
  "_resolved": "https://registry.npmjs.org/json-schema-deref-sync/-/json-schema-deref-sync-0.3.4.tgz",
  "_shasum": "87d146d99cdff35d8458c91918ee0bf5ef76f214",
  "_shrinkwrap": null,
  "_spec": "json-schema-deref-sync@^0.3.1",
  "_where": "C:\\Imp\\node\\swag\\node_modules\\swagger-test-templates",
  "author": {
    "name": "Bojan D.",
    "email": "dbojan@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/bojand/json-schema-deref-sync/issues"
  },
  "dependencies": {
    "clone": "~2.0.0",
    "dag-map": "~1.0.0",
    "is-valid-path": "^0.1.1",
    "lodash": "^4.7.0",
    "md5": "~2.2.0",
    "memory-cache": "~0.1.5",
    "mpath": "~0.2.1",
    "traverse": "~0.6.6",
    "valid-url": "~1.0.9"
  },
  "description": "Simple Node.js JSON Schema dereferencer",
  "devDependencies": {
    "async": "~2.1.0",
    "babel-cli": "~6.14.0",
    "babel-preset-es2015": "~6.14.0",
    "chai": "~3.4.1",
    "fs.extra": "~1.3.2",
    "jsdoc-to-markdown": "^1.3.3",
    "mocha": "~2.3.4"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-4Ssj+1UGDJAzPIdTL1QW/rvHwWeuwC28gjbA0EjStLxVsalc+UPciKXxs3rhtr4gaGdIBojW/VmvC8B8bCQwcA==",
    "shasum": "87d146d99cdff35d8458c91918ee0bf5ef76f214",
    "tarball": "https://registry.npmjs.org/json-schema-deref-sync/-/json-schema-deref-sync-0.3.4.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "8f182c735994e208584d6e48b31c1ba098475fc6",
  "homepage": "https://github.com/bojand/json-schema-deref-sync",
  "keywords": [
    "json",
    "schema",
    "deref"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "bojand",
      "email": "dbojan@gmail.com"
    }
  ],
  "name": "json-schema-deref-sync",
  "optionalDependencies": {},
  "readme": "# json-schema-deref-sync\n\nDereference JSON pointers in a JSON schemas with their true resolved values.\nBasically a lighter, synchronous version of [json-schema-deref](https://github.com/bojand/json-schema-deref) but omits web references and\ncustom loaders.\n\n## Installation\n\n`npm install json-schema-deref-sync`\n\n## Overview\n\nLet's say you have the following JSON Schema:\n\n```json\n{\n  \"description\": \"Just some JSON schema.\",\n  \"title\": \"Basic Widget\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"id\": {\n      \"description\": \"unique identifier\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"readOnly\": true\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"$ref\": \"#/definitions/id\"\n    },\n    \"foo\": {\n      \"$ref\": \"http://www.mysite.com/myschema.json#/definitions/foo\"\n    },\n    \"bar\": {\n      \"$ref\": \"bar.json\"\n    }\n  }\n}\n```\n\nSometimes you just want that schema to be fully expanded, with `$ref`'s being their (true) resolved values:\n\n```json\n{\n  \"description\": \"Just some JSON schema.\",\n  \"title\": \"Basic Widget\",\n  \"type\": \"object\",\n  \"definitions\": {\n    \"id\": {\n      \"description\": \"unique identifier\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"readOnly\": true\n    }\n  },\n  \"properties\": {\n    \"id\": {\n      \"description\": \"unique identifier\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"readOnly\": true\n    },\n    \"foo\": {\n      \"description\": \"foo property\",\n      \"readOnly\": true,\n      \"type\": \"number\"\n    },\n    \"bar\": {\n      \"description\": \"bar property\",\n      \"type\": \"boolean\"\n    }\n  }\n}\n```\n\nThis utility lets you do that:\n\n\n```js\nvar deref = require('json-schema-deref-sync');\nvar myschema = require('schema.json');\n\nvar fullSchema = deref(myschema);\n```\n\n## API Reference\n\n<a name=\"deref\"></a>\n\n## deref(schema, options) â‡’ <code>Object</code> &#124; <code>Error</code>\nDerefs <code>$ref</code>'s in JSON Schema to actual resolved values. Supports local, and file refs.\n\n**Kind**: global function  \n**Returns**: <code>Object</code> &#124; <code>Error</code> - the deref schema oran instance of <code>Error</code> if error.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| schema | <code>Object</code> | The JSON schema |\n| options | <code>Object</code> | options |\n| options.baseFolder | <code>String</code> | the base folder to get relative path files from. Default is <code>process.cwd()</code> |\n| options.failOnMissing | <code>Boolean</code> | By default missing / unresolved refs will be left as is with their ref value intact.                                        If set to <code>true</code> we will error out on first missing ref that we cannot                                        resolve. Default: <code>false</code>. |\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bojand/json-schema-deref-sync.git"
  },
  "scripts": {
    "dist": "node ./node_modules/babel-cli/bin/babel.js lib --out-dir dist",
    "docs": "jsdoc2md \"lib/**/*.js\" --template readme.hbs > README.md",
    "prepublish": "npm run dist",
    "test": "npm run dist && mocha"
  },
  "version": "0.3.4",
  "xo": {
    "envs": [
      "node",
      "es6"
    ],
    "esnext": true,
    "space": true,
    "rules": {
      "babel/arrow-parens": 1,
      "babel/object-curly-spacing": 0,
      "babel/object-shorthand": 1,
      "brace-style": 1,
      "no-else-return": 1,
      "no-unused-vars": 1
    }
  }
}
